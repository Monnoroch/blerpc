{{#packageName}}
package {{packageName}};
{{/packageName}}

{{#javaDoc}}
{{{javaDoc}}}
{{/javaDoc}}
{{#deprecated}}
@java.lang.Deprecated
{{/deprecated}}
public class {{className}} {

  private final {{packageName}}.{{serviceName}} service;
  private final java.util.logging.Logger logger;

  public {{className}}({{packageName}}.{{serviceName}} service, java.util.logging.Logger logger) {
    this.service = service;
    this.logger = logger;
  }
{{#methods}}
{{#isManyOutput}}

    {{#javaDoc}}
  {{{javaDoc}}}
    {{/javaDoc}}
    {{#deprecated}}
  @java.lang.Deprecated
    {{/deprecated}}
  public io.reactivex.Observable<{{outputType}}> {{methodName}}({{inputType}} request) {
    return {{methodName}}(request, new com.blerpc.BleRpcController());
  }
{{/isManyOutput}}

    {{#javaDoc}}
  {{{javaDoc}}}
    {{/javaDoc}}
    {{#deprecated}}
  @java.lang.Deprecated
    {{/deprecated}}
  public {{#isManyOutput}}io.reactivex.Observable{{/isManyOutput}}{{^isManyOutput}}io.reactivex.Single{{/isManyOutput}}<{{outputType}}> {{methodName}}({{inputType}} request{{#isManyOutput}}, com.blerpc.BleRpcController controller{{/isManyOutput}}) {
      return {{#isManyOutput}}io.reactivex.Observable{{/isManyOutput}}{{^isManyOutput}}io.reactivex.Single{{/isManyOutput}}.create(
          subscriber -> {
              {{^isManyOutput}}
            com.blerpc.BleRpcController controller = new com.blerpc.BleRpcController();
              {{/isManyOutput}}
            service.{{methodName}}(
                controller,
                request,
                response -> {
                  if (!controller.failed()) {
                    subscriber.{{#isManyOutput}}onNext{{/isManyOutput}}{{^isManyOutput}}onSuccess{{/isManyOutput}}(response);
                  } else {
                    com.blerpc.RxOnError.loggingUncatchableExceptions(
                        subscriber, new Exception(controller.errorText()), logger);
                  }
                });
            subscriber.setCancellable(controller::startCancel);
          });
  }
  {{/methods}}
}
